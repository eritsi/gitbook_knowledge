{"./":{"url":"./","title":"Introduction","keywords":"","body":"gitbook_test GitBookを試すためのリポジトリ 基本はHeading 2で記述 基礎ですが強調の仕方、改行の仕方です。FlutterとはGoogleが開発しているクロスプラットフォームのアプリケーションフレームワークです。 画像と動画の貼り方 画像はこちらTOYOTAがFlutterを導入して少し話題になっていました。 動画はこちら YouTubeの場合はこちら ヒント、ワーニングボックスの出し方 github上では反映されません。hint ~ endhintで囲みます。working, danger, tip, infoで種類を切り替えます。 work hogehoge - working hogehoge - danger hogehoge - tip この中は普通にMarkdownで記載 コードの埋め込み codeブロックで囲みます。 // Todo Widget build(BuildContext context) { return Scaffold( + appBar: AppBar( + actions: [_userIcon(), _authButton()], + ), body: _timeLine(context), ); } コードをタブ形式で埋め込み tabsブロックでtabブロックを囲み、その中にcodeブロックを置きます。viewmodelviewfinal postsProvider = StateProvider( (ref) => [ Post( user: 'anonymous', body: 'body1', uid: 'anonymous', photoURL: '', timeStamp: DateTime(2021), ), ], ); // bodyの要素 Widget _timeLine(BuildContext context) { final posts = useProvider(postsProvider); // ここでposts呼び出し return _timeLineCards(context, posts.state); // 変数.state で値にアクセスできる } グラフ描画 functionPlot({\"title\":\"cos(2*PI*x/2)*(1+0.5cos(2*PI*x/100))\",\"grid\":true,\"xAxis\":{\"label\":\"Sample\",\"domain\":[0,300]},\"yAxis\":{\"label\":\"Amplitude\",\"domain\":[-1.5,1.5]},\"data\":[{\"fn\":\"cos(2*PI*x/2)*(1+0.5cos(2*PI*x/100))\"},{\"fn\":\"(1+0.5cos(2*PI*x/100))\"}],\"target\":\"#plugin-graph-0\"}); グラフ描画2 functionPlot({\"title\":\"ガンマ関数の描画テスト\",\"grid\":true,\"xAxis\":{\"label\":\"X軸\",\"domain\":[-10,10]},\"yAxis\":{\"label\":\"Y軸\",\"domain\":[-6,6]},\"data\":[{\"fn\":\"sin(x)\"},{\"fn\":\"x\"},{\"fn\":\"x - x^3/3!\",\"sampler\":\"builtIn\",\"graphType\":\"polyline\"},{\"fn\":\"x - x^3/3! + x^5/5!\",\"sampler\":\"builtIn\",\"graphType\":\"polyline\"},{\"fn\":\"gamma(x)\",\"sampler\":\"builtIn\",\"graphType\":\"polyline\"}],\"target\":\"#plugin-graph-1\"}); 数式記述 Inline math: ∫−∞∞g(x)dx\\int_{-\\infty}^\\infty g(x) dx∫​−∞​∞​​g(x)dx Block math: ∫−∞∞g(x)dx \\int_{-\\infty}^\\infty g(x) dx ∫​−∞​∞​​g(x)dx Or using the templating syntax: ∫−∞∞g(x)dx\\int_{-\\infty}^\\infty g(x) dx∫​−∞​∞​​g(x)dx Amazon Linkの埋め込み Generate Link tag: macOS Sierra Generate Image tag: MindMapの埋め込み a mind map of something Noembedお試し https://www.slideshare.net/kanbara/abc2018springflutter-101476556 自作のプラグインを使用 上のslideshareのリンク先は80スライドありますが、スライド5だけ埋め込みたい・・・という場合に使用します。スライド5と合致していることを確かめてみてください。 https://www.slideshare.net/kanbara/abc2018springflutter-101476556 "},"gitbook/plugin.html":{"url":"gitbook/plugin.html","title":"gitbook-pluginの開発","keywords":"","body":"gitbook pluginの開発 (元)公式ドキュメント https://tinydew4.gitbooks.io/gitbook/content/docs/plugins/ pluginインストールについて npm登録前のテスト方法についてはこちら npm登録は npm publish npmに登録している場合の使い方book.json.gitpod.yml \"plugins\": [ \"my-plugin\"] gitbook install -g npmに登録していない場合の使い方 book.json \"plugins\": [ \"my-plugin@git+https://github.com//.git#master\"] pluginの種類について Hooks Blocks {%...%} で呼び出すブロックの挙動を定義できる。引数とBodyを使ってHTMLを返す YouTube-Placeholder index.jssummary.mdmodule.exports = { blocks: { youtube: (block) => ` `, }, } {% youtube embed=\"G9J-KcqcQYY\" %}{% endyoutube %} Amazon-jp-linkindex.jssummary.mdresult.htmlfunction renderAmazonJpLink(asin, tag, body) { return `${ body}'; } module.exports = { blocks: { AmazonJpLink: { process(block) { return renderAmazonJpLink(block.args[0], block.args[1], block.body); }, }, AmazonJpImage: { process(block) { const asin = block.args[0]; const tag = block.args[1]; let size = block.args[2]; if (!size) { size = 150; } const imageSize = parseInt(size, 10) * 2; const body = ``; return renderAmazonJpLink(asin, tag, body); }, }, }, }; {% AmazonJpLink \"B01N59VNQY\", \"johndue-22\" %}macOS Sierra{% endAmazonJpLink %} Filters pipeオペレーターを繋いで変数を関数に流していき、完成したHTMLを返すNoembeded index.jsassets/scripts.jssummary.mdfunction noembed(url) { var endpoint = '//noembed.com/embed?'; if (!!url.length) { endpoint += 'url=' + encodeURIComponent(url); return '' + url + ''; } return url; } module.exports = { website: { assets: './assets', js: ['scripts.js'], css: ['style.css'] }, filters: { noembed: noembed, video: noembed, } }; function renderNoembed(event) { var iframes = document.querySelectorAll('.noembed-wrapper'); var loaded = 0; var total = iframes.length; var externalScripts = []; function calculateAspectRatioFit(srcWidth, srcHeight, maxWidth, maxHeight) { var ratio = Math.min(maxWidth / srcWidth, maxHeight / srcHeight); return {width: (srcWidth * ratio) | 0, height: (srcHeight * ratio) | 0}; } function ajaxReq(url, callback) { var req = new XMLHttpRequest(); req.onreadystatechange = function() { if (req.readyState === XMLHttpRequest.DONE) { if (req.status === 200) { callback(JSON.parse(req.responseText)); } } }; req.open('GET', url, true); req.send(); return req; } function checkForScripts(html) { var tempElement = document.createElement('div'); tempElement.innerHTML = html; var scripts = tempElement.querySelectorAll('script'); if (scripts.length) { for (var i = 0; i {{ 'https://www.slideshare.net/kanbara/abc2018springflutter-101476556' | noembed }} 自作slideshareページ指定 開発の流れ ブラウザ上で、Noembedに目的のurlを入れたアドレスのレスポンスを見る 例:slideshareのレスポンス 取り出したいタグをメモする レスポンスのタグ返り値を使って、目的のHTMLを完成させる 先ほどの例で言うと、slide_image_baseurl や slide_image_baseurl_suffix に当たりをつけ、slideshareのEmbed iframeタグを真似た出力を目指す index.jsassets/scripts.jssummary.mdfunction slideshare(url, kwargs) { var endpoint = '//noembed.com/embed?'; var page = kwargs.page if (!!url.length) { endpoint += 'url=' + encodeURIComponent(url); return '' + url + ''; } return url; } module.exports = { website: { assets: './assets', js: ['scripts.js'], css: ['style.css'] }, filters: { slideshare: slideshare, } }; function renderSlideshare(event) { var iframes = document.querySelectorAll('.slideshare-wrapper'); var loaded = 0; var total = iframes.length; var externalScripts = []; function ajaxReq(url, callback) { var req = new XMLHttpRequest(); req.onreadystatechange = function() { if (req.readyState === XMLHttpRequest.DONE) { if (req.status === 200) { callback(JSON.parse(req.responseText)); } } }; req.open('GET', url, true); req.send(); return req; } function getVideoData(url, wrapper) { if (!!url.length) { ajaxReq(url, function(res) { var safeHtml = ''; if (res.html) { safeHtml = document.createElement('img'); safeHtml.src = res.slide_image_baseurl + page + res.slide_image_baseurl_suffix; safeHtml.innerText = res.title; // safeHtml = checkForScripts(res.html); } else { safeHtml = document.createElement('a'); safeHtml.href = res.url; safeHtml.innerText = res.url; } wrapper.innerHTML = ''; wrapper.appendChild(safeHtml); loaded++; if (loaded === total) { externalScripts.forEach(function(script) { var newScript = document.createElement('script'); newScript.src = script; document.body.appendChild(newScript); }); } }); } } for (var i = 0; i {{ 'https://www.slideshare.net/kanbara/abc2018springflutter-101476556' | slideshare(page='5') }} github.ioでの公開まで 参考サイト "}}